version: "3"

volumes:
  shared_volume:

networks:
  web:
    external: true
  internal:
    external: false

services:
  mysql:
    container_name: ${PROJECT_NAME}__mysql
    image: mysql:8.0
    restart: unless-stopped
    env_file: .env.mysql
    ports:
      - ${PORT_MYSQL}:3306
    volumes:
      - ./volumes/mysql-data:/var/lib/mysql
      - ./config/low-memory-mysql-8.cnf:/etc/mysql/conf.d/low-memory-my.cnf:ro
    networks:
      - internal

  imgproxy:
    image: darthsim/imgproxy:latest
    container_name: ${PROJECT_NAME}__imgproxy
    env_file: .env.imgproxy
    ports:
      - ${PORT_IMGPROXY}:8080
    networks:
      - internal
      - web
    labels:
      - traefik.http.routers.${PROJECT_NAME}__imgproxy.rule=Host(`${HOST_IMAGES}`)
      - traefik.http.routers.${PROJECT_NAME}__imgproxy.tls=true
      - traefik.http.routers.${PROJECT_NAME}__imgproxy.tls.certresolver=lets-encrypt
      - traefik.port=${PORT_IMGPROXY}

  wordpress:
    container_name: ${PROJECT_NAME}__wordpress
    build:
      context: .
    env_file: .env.wordpress
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
    restart: unless-stopped
    volumes:
      - "${VOLUME}:/var/www/html"
      - ./volumes/wordpress-uploads:/var/www/html/web/app/uploads
    depends_on:
      - mysql
    networks:
      - internal
      - web
    ports:
      - ${PORT_NGINX}:80
    labels:
      - traefik.http.routers.${PROJECT_NAME}__nginx.rule=Host(`${HOST_WORDPRESS}`)
      - traefik.http.routers.${PROJECT_NAME}__nginx.tls=true
      - traefik.http.routers.${PROJECT_NAME}__nginx.tls.certresolver=lets-encrypt
      - traefik.port=${PORT_NGINX}

  adminer:
    container_name: ${PROJECT_NAME}__adminer
    image: adminer:latest
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: ${PROJECT_NAME}__mysql
    ports:
      - ${PORT_ADMINER}:8080
    labels:
      - traefik.http.routers.${PROJECT_NAME}__adminer.rule=Host(`${HOST_ADMINER}`)
      - traefik.http.routers.${PROJECT_NAME}__adminer.tls=true
      - traefik.http.routers.${PROJECT_NAME}__adminer.tls.certresolver=lets-encrypt
      #- traefik.http.routers.${PROJECT_NAME}__adminer.middlewares=${PROJECT_NAME}__adminer-auth
      # echo $(htpasswd -nb user password) | sed -e s/\\$/\\\\\$/g
      #- traefik.http.middlewares.${PROJECT_NAME}__adminer-auth.basicauth.users=${ADMINER_USER}:${ADMINER_PASSWORD}
      - traefik.port=${PORT_ADMINER}
    networks:
      - internal
      - web
    depends_on:
      - mysql
    volumes:
      - ./config/adminer/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
      - ./config/adminer/adminer.css:/var/www/html/adminer.css:ro

  backup:
    container_name: ${PROJECT_NAME}__backup
    image: futurice/docker-volume-backup
    restart: unless-stopped
    env_file:
      - .env.backup
    volumes:
      - ./volumes:/backup
    profiles: ["production"]
